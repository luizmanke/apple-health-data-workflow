version: "3"

services:

  frontend:
    image: apple-health-data-workflow:latest
    command: /go/bin/frontend
    environment:
      WAREHOUSE_USER: username
      WAREHOUSE_PASSWORD: password
      WAREHOUSE_HOST: warehouse
      WAREHOUSE_PORT: 5432
      WAREHOUSE_DATABASE: apple_health
    ports:
      - "8080:8080"
    depends_on:
      backend:
        condition: service_completed_successfully

  backend:
    image: apple-health-data-workflow:latest
    command: /go/bin/backend
    environment:
      INGESTER_SOURCE_DIRECTORY: /data
      INGESTER_DESTINATION_USER: username
      INGESTER_DESTINATION_PASSWORD: password
      INGESTER_DESTINATION_HOST: warehouse
      INGESTER_DESTINATION_PORT: 5432
      INGESTER_DESTINATION_DATABASE: apple_health
      QUEUE_SERVER: datahub:9092
      QUEUE_TOPIC: apple-health.summary
    volumes:
      - ${PWD}/data:/data:ro
    depends_on:
      datahub:
        condition: service_healthy
      migration:
        condition: service_completed_successfully

  datahub:
    image: confluentinc/cp-kafka:7.6.1
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://datahub:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: datahub_manager:2181
    expose:
      - 9092
    healthcheck:
      test: nc -z localhost 9092 || exit -1
      interval: 5s
      timeout: 5s
      retries: 5
    depends_on:
      - datahub_manager

  datahub_manager:
    image: confluentinc/cp-zookeeper:7.6.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    expose:
      - 2181

  migration:
    image: redgate/flyway
    command: migrate
    volumes:
      - ${PWD}/migrations/flyway.toml:/flyway/conf/flyway.toml:ro
      - ${PWD}/migrations/sql:/flyway/sql:ro
    depends_on:
      warehouse:
        condition: service_healthy

  warehouse:
    image: postgres:16.2
    environment:
      POSTGRES_DB: apple_health
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
    expose:
      - 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
